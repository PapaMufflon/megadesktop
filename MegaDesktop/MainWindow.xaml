<Window x:Class="MegaWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:MegaApi;assembly=MegaApi"
        xmlns:e="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:behaviours="clr-namespace:MegaDesktop.Ui"
        Title="Mega Desktop (v0.75 beta)" Height="500" Width="500" MinHeight="500" MinWidth="500" Icon="pack://application:,,,/m.ico" AllowDrop="True" DragEnter="Window_DragEnter_1" Drop="Window_Drop_1">
    <Window.Resources>
        <DataTemplate x:Key="NodeViewTemplate">
            <StackPanel Orientation="Horizontal">
                <Label Content=">">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Visibility" Value="Hidden"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Type}"  Value="1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Type}"  Value="-1">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <Label>
                    <Binding Path="Name"/>
                </Label>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TransferViewTemplate">
            <StackPanel Orientation="Horizontal">
                <Label>
                    <Binding Path="Node.Attributes.Name"/>
                </Label>
                <Label ContentStringFormat="F2">
                    <Binding Path="Progress"/>
                </Label>
                <Label>
                    <Label.Style>
                        <Style TargetType="Label">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Success</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Success"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Downloading</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Downloading"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Uploading</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Uploading"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Pending</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Pending"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Error</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Error"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Cancelled</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Content" Value="Cancelled"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                </Label>
                <Label ContentStringFormat="{}{0:F2} MB/s" Content="{Binding Path=Speed}"/>

                <Button Content="Cancel" Click="ButtonCancelTransfer_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline" VerticalAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="Blue" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Cancelled</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Success</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Error</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <Button Content="Remove" Click="ButtonRemoveTransfer_Click">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <TextBlock TextDecorations="Underline" VerticalAlignment="Center">
                                <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Button.Template>
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Foreground" Value="Blue" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Uploading</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Downloading</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Status}">
                                    <DataTrigger.Value>
                                        <local:TransferHandleStatus>Pending</local:TransferHandleStatus>
                                    </DataTrigger.Value>
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <DockPanel Height="100" HorizontalAlignment="Stretch" Name="dockPanel1" VerticalAlignment="Top">
            <Button Height="50" Command="{Binding UploadCommand}" CommandParameter="{Binding SelectedNode}" Width="50" HorizontalAlignment="Left" ToolTip="Upload" Margin="10,0,0,0">
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/upload.png" />
            </Button>
            <Button Height="50" Command="{Binding DownloadCommand}" CommandParameter="{Binding SelectedNode}" Width="50" HorizontalAlignment="Left" ToolTip="Download">
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/download.png" />
            </Button>
            <Button Height="50" Command="{Binding DeleteCommand}" CommandParameter="{Binding SelectedNode}" Width="50" HorizontalAlignment="Left" Margin="10,0,0,0" ToolTip="Delete">
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/remove.png" Height="26" />
            </Button>
            <Button Height="50" Command="{Binding LoginCommand}" Width="50" Visibility="Collapsed" Margin="10,0,0,0" ToolTip="Login">
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/login.png"  Height="36"/>
            </Button>
            <Button Height="50" Command="{Binding LogoutCommand}" Width="50" Visibility="Collapsed" Margin="10,0,0,0" ToolTip="Logout">
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/logout.png" Height="20" />
            </Button>
            <Button Height="50" Name="buttonRefresh" Width="50" HorizontalAlignment="Left" Click="buttonRefresh_Click" IsEnabled="False" ToolTip="Refresh" Margin="10,0,0,0" >
                <Image Source="pack://application:,,,/MegaDesktop;component/resources/refresh.png" Height="40"/>
            </Button>
        </DockPanel>
        <DockPanel  HorizontalAlignment="Stretch" Margin="0,100,0,130" Name="dockPanel2" VerticalAlignment="Stretch">
            <TreeView DockPanel.Dock="Left" ItemsSource="{Binding RootNode.ChildNodes}">
                <e:Interaction.Behaviors>
                    <behaviours:BindableSelectedItemBehavior SelectedItem="{Binding SelectedTreeNode, Mode=OneWayToSource}" />
                </e:Interaction.Behaviors>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding ChildNodes}">
                        <TextBlock Text="{Binding Name}" />
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
            <ListBox ItemsSource="{Binding SelectedTreeNode.Children}"
                     SelectedItem="{Binding SelectedListNode, Mode=OneWayToSource}"
                     ItemTemplate="{StaticResource NodeViewTemplate}"
                     MouseDoubleClick="listBoxNodes_MouseDoubleClick" />
        </DockPanel>
        <ListBox Height="100" HorizontalAlignment="Stretch" Margin="0,0,0,25" VerticalAlignment="Bottom"
                 ItemsSource="{Binding Transfers}"
                 ItemTemplate="{StaticResource TransferViewTemplate}"/>
        <DockPanel Height="25" VerticalAlignment="Bottom">
            <TextBox Padding="3" HorizontalAlignment="Left" Text="{Binding Status.Message}" FontSize="14" IsReadOnly="True" BorderThickness="0"/>
            <Button x:Name="HomeLink" Content="http://megadesktop.com/" HorizontalAlignment="Right" Click="Button_Click_1" FontSize="12" Margin="0,0,5,0">
                <Button.Template>
                    <ControlTemplate TargetType="Button">
                        <TextBlock TextDecorations="Underline" VerticalAlignment="Center">
                                <ContentPresenter />
                        </TextBlock>
                    </ControlTemplate>
                </Button.Template>
                <Button.Style>
                    <Style TargetType="Button">
                        <Setter Property="Foreground" Value="Blue" />
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Foreground" Value="Red" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
        </DockPanel>
    </Grid>
</Window>
